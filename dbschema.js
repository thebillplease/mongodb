// POST Values Example
{
"hId" 			: 93230, //unique id from the transmitter. Unmutable.
"sId"			: 2, 	// sensor id
"tmp"			: 4,	// temperature measurement
"cid"			: 5555,	// unique id for a sensor tracking a specific food. created by sensor every time it powers on.
"cat"			: 1,	// category ids maps to strings
"vcc1"			: 98,	// battery measurement before transmission 
"vcc2"			: 97,	// battery measurement after transmission
"seq"			: 45,	// sequence number from 0 - 9999
"s"				: 1,	// power status indicator 1 - on, 0 - off
}


// Stored Content. Aggregation of the sensor data around cid (contentId)
"_id"		: 	cid, // unique id for a sensor tracking a specific food
"end"		:	ISODate("2014-03-21T12:18:12.648Z"), // last modified date
"start"		:	ISODate("2014-03-21T12:16:39.047Z"), // enter date
"fBy"		:	ISODate("2014-03-21T12:20:39.047Z"), // freshest by date. calculated on an hourly basis. 
"cat"		:	1, 
"cLabel"	: 	"Chicken ricotta with lime", // user entered label
"notes"		: 	"Remember to add salt", // user entered notes
"avgT"		:	 7, // avg. temp from start till now. calculated on an hourly basis.
"managed"   :   "system", // distinguish between user entered and system tracked
"stat"		:	"1", // latest updated 's' number
"reminder"	:	[
	{
	"user"	: 	ISODate("2014-03-21T12:16:39.047Z"), // user entered additional reminder
	"system":	ISODate("2014-03-21T12:16:39.047Z") // system generated reminder based on freshest by and user behavior
	}	],
"tags"		: 	{"chicken", "ricotta", "lime"} // tags autogenerated from cat and cLabel



// Sensors 
"_id"	:	ObjectId("0349dasdf932rkasf"),
"hId"	:	hubId,	
"sId"	:	senId,
"uids"	:	{ cid, cid, cid, cid },
"stat"	:	"on",
"bat"	:	97,
"last"	:	ISODate("2014-03-21T12:18:12.648Z") // last seen date


// Hubs 
"_id"	: 	ObjectId("0349dasdf932rkasf"),
"hId"	:	1234, 
"uId":	
"vs"	:	1.2 // hub firmware version
"last"	:	ISODate("2014-03-21T12:16:44.594Z") // last seen date
"ip"	:	129.129.19.9 // ip address of transmitter
"geo"	:	{lat, long} // lat long of where sensor was first setup


//Sensor schema. A single sensor will update every minute. Sensor object tracks 1hr into 60 1 min. chunks.  
// based on this http://blog.mongodb.org/post/65517193370/schema-design-for-time-series-data-in-mongodb
// https://www.mongodb.com/presentations/mongodb-time-series-data-part-1-setting-stage-sensor-management?_ga=1.96703583.1535413078.1434404051

"_id"		: 	ObjectId("0349dasdf932rkasf"),
"hId"		: 123,
"sId"		: 123,
"cid"	: 5555, // unique id generated every time sensor is turned on.
"val"	: [
	{
            "tstamp" : ISODate("2014-03-21T12:16:44.594Z"),
            "cat"	: 123,
            "tmp" : 5,
            "vcc1" : 98,
            "vcc2" : 97,
            "seq"  : 4,
            "s" : 1
        },
        {
            "tstamp" : ISODate("2014-03-21T12:16:53.617Z"),
            "tmp" : 5,
            "vcc1" : 98,
            "vcc2" : 97,
            "seq"  : 5,
            "s" : 1
        },
        {
            "tstamp" : ISODate("2014-03-21T12:17:01.683Z"),
            "tmp" : 5,
            "vcc1" : 98,
            "vcc2" : 97,
            "seq"  : 6,
            "s" : 1
        },
        {
            "tstamp" : ISODate("2014-03-21T12:17:55.223Z"),
            "tmp" : 5,
            "vcc1" : 98,
            "vcc2" : 97,
            "seq"  : 7,
            "s" : 1
        }, 
        {
            "tstamp" : ISODate("2014-03-21T12:18:04.653Z"),
            "temp" : 5,
            "vcc1" : 98,
            "vcc2" : 97,
            "seq"  : 8,
            "s" : 1
        }
]



//person 
"_id"		: 	ObjectId("0349dasdf932rkasf"),
"username"	: 'username',
"name"		: 'first last',
"password"	: 'password',
"devices"	: [
	{ "hub": id },
	{ "sensors": { id, id, id } }
],
"geo": {lat, long},
"apiKey"	:	1234, // token used to make api calls
"dateRegistered": date

//recommendations
